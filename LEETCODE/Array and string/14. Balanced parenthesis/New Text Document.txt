//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    //Function to check if brackets are balanced or not.
    bool ispar(string exp)
    {
        // Your code here
        stack<int> st;
    int n = exp.size();
    for (int i = 0; i < n; i++)
    {
        if (exp[i] == '{' || exp[i] == '(' || exp[i] == '[')
        {
            st.push(exp[i]);
        }
        else if (st.empty())
        {
         
            return 0 ;
        }
        else if (!st.empty() && exp[i] == '}')
        { 
                  if(st.top()!='{'){
                      return 0;
                  }
                  st.pop();
            }
           
        
        else if (!st.empty() && exp[i] == ')')
        {
            if(st.top()!='('){
                      return 0;
                  }
                  st.pop();
        }
        else if (!st.empty() && exp[i] == ']')
        { 
           
             if(st.top()!='['){
                      return 0;
                  }
                   st.pop();
        }
    }
    if (st.empty())
    {
        return 1;
    }
    else
    {
       return 0;
    }
    }

};


//{ Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}
// } Driver Code Ends
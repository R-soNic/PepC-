//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

// A : given string to search
// B : vector of available strings

class Solution
{
public:
    bool isTrue(string s, int i,unordered_set<string> &st){
      if(i == s.size()) return true;
      string temp="";
      for(int j=i; j<s.size(); j++)
      { 
        temp += s[j];
        if(st.find(temp) != st.end()) 
        {
            if(isTrue(s,j+1,st)) return true;
        }
      }
    return false;
    }
    int wordBreak(string A, vector<string> &B) {
        //code here
        unordered_set<string> st;
        for(auto i: B) st.insert(i);
        return isTrue(A,0,st);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<string> dict;
        for(int i=0;i<n;i++){
            string S;
            cin>>S;
            dict.push_back(S);
        }
        string line;
        cin>>line;
        Solution ob;
        cout<<ob.wordBreak(line, dict)<<"\n";
    }
}

// } Driver Code Ends